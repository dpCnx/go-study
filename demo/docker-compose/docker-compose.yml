version: '3'
services:
  mysql:
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: "root"
    image: "docker.io/mysql:latest"
    restart: always
    volumes:
      - "./data/mysql:/var/lib/mysql"
      - "./conf/mysql.cnf:/etc/my.cnf"
    network_mode: bridge
    ports:
      - "3306:3306"
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    volumes:
      #数据目录
      - "./data/redis:/data"
      - "./conf/redis.conf:/etc/redis/redis.conf"
    network_mode: bridge
    ports:
      - "6379:6379"
    command: redis-server /etc/redis/redis.conf
  mongodb:
    image: mongo:latest
    restart: always
    container_name: mongo
    volumes:
      - "./data/mongo:/data/db/"
      - "./log/mongodb.log:/log/mongodb.log"
      - "./conf/mongo.conf:/etc/mongodb.conf"
    network_mode: bridge
    ports:
      - "27017:27017"
    #command: mongod -f /etc/mongodb.conf
  web:
    container_name: web
    build: ./web
    restart: always
    network_mode: bridge
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
      - mongodb
  nginx:
    container_name: nginx
    image: nginx
    restart: always
    network_mode: bridge
    volumes:
      - "./conf/nginx.conf:/etc/nginx/nginx.conf"
      - "./log/nginx:/var/log/nginx"  #日志
      #- "./html:/usr/share/nginx/html"  #html
    ports:
      - "80:80"
      - "443:443"
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    restart: always
    network_mode: bridge
    volumes:
      - "./data/rabbitmp:/var/lib/rabbitmq"
    ports:
      - "15673:15672" #管理界面ui使用的端口
      - "5673:5672" #AMQP 0-9-1 without and with TLSclient端通信口